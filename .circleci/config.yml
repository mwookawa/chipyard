# CircleCI Configuration File

# version of circleci
version: 2

# set of jobs to run
jobs:
    commit-on-master-check:
        docker:
            - image: riscvboom/riscvboom-images:0.0.10
        environment:
            JVM_OPTS: -Xmx3200m # Customize the JVM maximum heap limit
            TERM: dumb
        steps:
            - checkout
            - run:
                name: Check commits of each submodule
                command: |
                    .circleci/check-commit.sh
    install-riscv-toolchain:
        docker:
            - image: riscvboom/riscvboom-images:0.0.10
        environment:
            JVM_OPTS: -Xmx3200m # Customize the JVM maximum heap limit
            TERM: dumb
        steps:
            - checkout
            - run:
                name: Create hash of toolchains
                command: |
                    .circleci/create-hash.sh
            - restore_cache:
                keys:
                    - riscv-tools-installed-v1-{{ checksum "../riscv-tools.hash" }}
            - run:
                name: Building riscv-tools toolchain
                command: |
                    .circleci/build-toolchains.sh riscv-tools
                no_output_timeout: 120m
            - save_cache:
                key: riscv-tools-installed-v1-{{ checksum "../riscv-tools.hash" }}
                paths:
                    - "/home/riscvuser/riscv-tools-install"
    install-esp-toolchain:
        docker:
            - image: riscvboom/riscvboom-images:0.0.10
        environment:
            JVM_OPTS: -Xmx3200m # Customize the JVM maximum heap limit
            TERM: dumb
        steps:
            - checkout
            - run:
                name: Create hash of toolchains
                command: |
                    .circleci/create-hash.sh
            - restore_cache:
                keys:
                    - esp-tools-installed-v1-{{ checksum "../esp-tools.hash" }}
            - run:
                name: Building esp-tools toolchain
                command: |
                    .circleci/build-toolchains.sh esp-tools
                no_output_timeout: 120m
            - save_cache:
                key: esp-tools-installed-v1-{{ checksum "../esp-tools.hash" }}
                paths:
                    - "/home/riscvuser/esp-tools-install"
    install-verilator:
        docker:
            - image: riscvboom/riscvboom-images:0.0.10
        environment:
            JVM_OPTS: -Xmx3200m # Customize the JVM maximum heap limit
            TERM: dumb
        steps:
            - add_ssh_keys:
                fingerprints:
                    - "3e:c3:02:5b:ed:64:8c:b7:b0:04:43:bc:83:43:73:1e"
            - checkout
            - restore_cache:
                keys:
                    - verilator-installed-v3-{{ checksum "sims/verilator/verilator.mk" }}
            - run:
                name: Build Verilator
                command: |
                    .circleci/build-verilator.sh
                no_output_timeout: 120m
            - save_cache:
                key: verilator-installed-v3-{{ checksum "sims/verilator/verilator.mk" }}
                paths:
                    - "/home/riscvuser/verilator"
    prepare-example:
        docker:
            - image: riscvboom/riscvboom-images:0.0.10
        environment:
            JVM_OPTS: -Xmx3200m # Customize the JVM maximum heap limit
            TERM: dumb
        steps:
            - add_ssh_keys:
                fingerprints:
                    - "3e:c3:02:5b:ed:64:8c:b7:b0:04:43:bc:83:43:73:1e"
            - checkout
            - run:
                name: Create hash of toolchains
                command: |
                    .circleci/create-hash.sh
            - restore_cache:
                keys:
                    - riscv-tools-installed-v1-{{ checksum "../riscv-tools.hash" }}
            - restore_cache:
                keys:
                    - verilator-installed-v3-{{ checksum "sims/verilator/verilator.mk" }}
            - run:
                name: Building the example subproject using Verilator
                command: .circleci/do-rtl-build.sh example
                no_output_timeout: 120m
            - save_cache:
                key: example-{{ .Branch }}-{{ .Revision }}
                paths:
                    - "/home/riscvuser/project"
    prepare-boomrocketexample:
        docker:
            - image: riscvboom/riscvboom-images:0.0.10
        environment:
            JVM_OPTS: -Xmx3200m # Customize the JVM maximum heap limit
            TERM: dumb
        steps:
            - add_ssh_keys:
                fingerprints:
                    - "3e:c3:02:5b:ed:64:8c:b7:b0:04:43:bc:83:43:73:1e"
            - checkout
            - run:
                name: Create hash of toolchains
                command: |
                    .circleci/create-hash.sh
            - restore_cache:
                keys:
                    - riscv-tools-installed-v1-{{ checksum "../riscv-tools.hash" }}
            - restore_cache:
                keys:
                    - verilator-installed-v3-{{ checksum "sims/verilator/verilator.mk" }}
            - run:
                name: Building the boomrocketexample subproject using Verilator
                command: .circleci/do-rtl-build.sh boomrocketexample
                no_output_timeout: 240m
            - save_cache:
                key: boomrocketexample-{{ .Branch }}-{{ .Revision }}
                paths:
                    - "/home/riscvuser/project"
    prepare-boom:
        docker:
            - image: riscvboom/riscvboom-images:0.0.10
        environment:
            JVM_OPTS: -Xmx3200m # Customize the JVM maximum heap limit
            TERM: dumb
        steps:
            - add_ssh_keys:
                fingerprints:
                    - "3e:c3:02:5b:ed:64:8c:b7:b0:04:43:bc:83:43:73:1e"
            - checkout
            - run:
                name: Create hash of toolchains
                command: |
                    .circleci/create-hash.sh
            - restore_cache:
                keys:
                    - riscv-tools-installed-v1-{{ checksum "../riscv-tools.hash" }}
            - restore_cache:
                keys:
                    - verilator-installed-v3-{{ checksum "sims/verilator/verilator.mk" }}
            - run:
                name: Building the boom subproject using Verilator
                command: .circleci/do-rtl-build.sh boom
                no_output_timeout: 120m
            - save_cache:
                key: boom-{{ .Branch }}-{{ .Revision }}
                paths:
                    - "/home/riscvuser/project"
    prepare-rocketchip:
        docker:
            - image: riscvboom/riscvboom-images:0.0.10
        environment:
            JVM_OPTS: -Xmx3200m # Customize the JVM maximum heap limit
            TERM: dumb
        steps:
            - add_ssh_keys:
                fingerprints:
                    - "3e:c3:02:5b:ed:64:8c:b7:b0:04:43:bc:83:43:73:1e"
            - checkout
            - run:
                name: Create hash of toolchains
                command: |
                    .circleci/create-hash.sh
            - restore_cache:
                keys:
                    - riscv-tools-installed-v1-{{ checksum "../riscv-tools.hash" }}
            - restore_cache:
                keys:
                    - verilator-installed-v3-{{ checksum "sims/verilator/verilator.mk" }}
            - run:
                name: Building the rocketchip subproject using Verilator
                command: .circleci/do-rtl-build.sh rocketchip
                no_output_timeout: 120m
            - save_cache:
                key: rocketchip-{{ .Branch }}-{{ .Revision }}
                paths:
                    - "/home/riscvuser/project"
    prepare-blockdevrocketchip:
        docker:
            - image: riscvboom/riscvboom-images:0.0.10
        environment:
            JVM_OPTS: -Xmx3200m # Customize the JVM maximum heap limit
            TERM: dumb
        steps:
            - add_ssh_keys:
                fingerprints:
                    - "3e:c3:02:5b:ed:64:8c:b7:b0:04:43:bc:83:43:73:1e"
            - checkout
            - run:
                name: Create hash of toolchains
                command: |
                    .circleci/create-hash.sh
            - restore_cache:
                keys:
                    - riscv-tools-installed-v1-{{ checksum "../riscv-tools.hash" }}
            - restore_cache:
                keys:
                    - verilator-installed-v3-{{ checksum "sims/verilator/verilator.mk" }}
            - run:
                name: Building the blockdevrocketchip subproject using Verilator
                command: .circleci/do-rtl-build.sh blockdevrocketchip
                no_output_timeout: 120m
            - save_cache:
                key: blockdevrocketchip-{{ .Branch }}-{{ .Revision }}
                paths:
                    - "/home/riscvuser/project"
    prepare-hwacha:
        docker:
            - image: riscvboom/riscvboom-images:0.0.10
        environment:
            JVM_OPTS: -Xmx3200m # Customize the JVM maximum heap limit
            TERM: dumb
        steps:
            - add_ssh_keys:
                fingerprints:
                    - "3e:c3:02:5b:ed:64:8c:b7:b0:04:43:bc:83:43:73:1e"
            - checkout
            - run:
                name: Create hash of toolchains
                command: |
                    .circleci/create-hash.sh
            - restore_cache:
                keys:
                    - esp-tools-installed-v1-{{ checksum "../esp-tools.hash" }}
            - restore_cache:
                keys:
                    - verilator-installed-v3-{{ checksum "sims/verilator/verilator.mk" }}
            - run:
                name: Building the hwacha subproject using Verilator
                command: .circleci/do-rtl-build.sh hwacha
                no_output_timeout: 120m
            - save_cache:
                key: hwacha-{{ .Branch }}-{{ .Revision }}
                paths:
                    - "/home/riscvuser/project"
    prepare-firesim:
        docker:
            - image: riscvboom/riscvboom-images:0.0.10
        environment:
            JVM_OPTS: -Xmx3200m # Customize the JVM maximum heap limit
            TERM: dumb
        steps:
            - add_ssh_keys:
                fingerprints:
                    - "3e:c3:02:5b:ed:64:8c:b7:b0:04:43:bc:83:43:73:1e"
            - checkout
            - run:
                name: Create hash of toolchains
                command: |
                    .circleci/create-hash.sh
            - restore_cache:
                keys:
                    - riscv-tools-installed-v1-{{ checksum "../riscv-tools.hash" }}
            - restore_cache:
                keys:
                    - verilator-installed-v3-{{ checksum "sims/verilator/verilator.mk" }}
            - run:
                name: Building FireSim MIDAS simulator using Verilator
                command: .circleci/do-firesim-build.sh firesim
                no_output_timeout: 120m
            - save_cache:
                key: example-{{ .Branch }}-{{ .Revision }}
                paths:
                    - "/home/riscvuser/project"

    example-run-tests:
        docker:
            - image: riscvboom/riscvboom-images:0.0.10
        environment:
            JVM_OPTS: -Xmx3200m # Customize the JVM maximum heap limit
            TERM: dumb
        steps:
            - checkout
            - run:
                name: Create hash of toolchains
                command: |
                    .circleci/create-hash.sh
            - restore_cache:
                keys:
                    - riscv-tools-installed-v1-{{ checksum "../riscv-tools.hash" }}
            - restore_cache:
                keys:
                    - example-{{ .Branch }}-{{ .Revision }}
            - restore_cache:
                keys:
                    - verilator-installed-v3-{{ checksum "sims/verilator/verilator.mk" }}
            - run:
                name: Run example tests
                command: .circleci/run-tests.sh example
    boomrocketexample-run-tests:
        docker:
            - image: riscvboom/riscvboom-images:0.0.10
        environment:
            JVM_OPTS: -Xmx3200m # Customize the JVM maximum heap limit
            TERM: dumb
        steps:
            - checkout
            - run:
                name: Create hash of toolchains
                command: |
                    .circleci/create-hash.sh
            - restore_cache:
                keys:
                    - riscv-tools-installed-v1-{{ checksum "../riscv-tools.hash" }}
            - restore_cache:
                keys:
                    - boomrocketexample-{{ .Branch }}-{{ .Revision }}
            - restore_cache:
                keys:
                    - verilator-installed-v3-{{ checksum "sims/verilator/verilator.mk" }}
            - run:
                name: Run boomrocketexample tests
                command: .circleci/run-tests.sh boomrocketexample
    boom-run-tests:
        docker:
            - image: riscvboom/riscvboom-images:0.0.10
        environment:
            JVM_OPTS: -Xmx3200m # Customize the JVM maximum heap limit
            TERM: dumb
        steps:
            - checkout
            - run:
                name: Create hash of toolchains
                command: |
                    .circleci/create-hash.sh
            - restore_cache:
                keys:
                    - riscv-tools-installed-v1-{{ checksum "../riscv-tools.hash" }}
            - restore_cache:
                keys:
                    - boom-{{ .Branch }}-{{ .Revision }}
            - restore_cache:
                keys:
                    - verilator-installed-v3-{{ checksum "sims/verilator/verilator.mk" }}
            - run:
                name: Run boom tests
                command: .circleci/run-tests.sh boom
    rocketchip-run-tests:
        docker:
            - image: riscvboom/riscvboom-images:0.0.10
        environment:
            JVM_OPTS: -Xmx3200m # Customize the JVM maximum heap limit
            TERM: dumb
        steps:
            - checkout
            - run:
                name: Create hash of toolchains
                command: |
                    .circleci/create-hash.sh
            - restore_cache:
                keys:
                    - riscv-tools-installed-v1-{{ checksum "../riscv-tools.hash" }}
            - restore_cache:
                keys:
                    - rocketchip-{{ .Branch }}-{{ .Revision }}
            - restore_cache:
                keys:
                    - verilator-installed-v3-{{ checksum "sims/verilator/verilator.mk" }}
            - run:
                name: Run rocketchip tests
                command: .circleci/run-tests.sh rocketchip
    hwacha-run-tests:
        docker:
            - image: riscvboom/riscvboom-images:0.0.10
        environment:
            JVM_OPTS: -Xmx3200m # Customize the JVM maximum heap limit
            TERM: dumb
        steps:
            - checkout
            - run:
                name: Create hash of toolchains
                command: |
                    .circleci/create-hash.sh
            - restore_cache:
                keys:
                    - esp-tools-installed-v1-{{ checksum "../esp-tools.hash" }}
            - restore_cache:
                keys:
                    - hwacha-{{ .Branch }}-{{ .Revision }}
            - restore_cache:
                keys:
                    - verilator-installed-v3-{{ checksum "sims/verilator/verilator.mk" }}
            - run:
                name: Run hwacha tests
                command: .circleci/run-tests.sh hwacha

# Order and dependencies of jobs to run
workflows:
    version: 2
    submodules-on-master:
        jobs:
            # Check to make sure submodule commits are on master branches
            - commit-on-master-check
        triggers:
            - schedule:
                cron: "0 0 * * *"
                filters:
                    branches:
                        only:
                            - master

    build-and-test-chipyard-integration:
        jobs:

            # Make the toolchains
            - install-riscv-toolchain

            - install-esp-toolchain

            # Build verilator
            - install-verilator

            # Prepare the verilator builds
            #- prepare-example:
            #    requires:
            #        - install-riscv-toolchain
            #        - install-verilator

            #- prepare-boomrocketexample:
            #    requires:
            #        - install-riscv-toolchain
            #        - install-verilator

            #- prepare-boom:
            #    requires:
            #        - install-riscv-toolchain
            #        - install-verilator

            #- prepare-rocketchip:
            #    requires:
            #        - install-riscv-toolchain
            #        - install-verilator

            #- prepare-blockdevrocketchip:
            #    requires:
            #        - install-riscv-toolchain
            #        - install-verilator

            #- prepare-hwacha:
            #    requires:
            #        - install-esp-toolchain
            #        - install-verilator
            - prepare-firesim:
                requires:
                    - install-riscv-toolchain
                    - install-verilator

            # Run the respective tests

            # Run the example tests
            #- example-run-tests:
            #    requires:
            #        - prepare-example

            #- boomrocketexample-run-tests:
            #    requires:
            #        - prepare-boomrocketexample

            #- boom-run-tests:
            #    requires:
            #        - prepare-boom

            #- rocketchip-run-tests:
            #    requires:
            #        - prepare-rocketchip

            #- hwacha-run-tests:
            #    requires:
            #        - prepare-hwacha
